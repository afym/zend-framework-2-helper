<h1>Uso básico de ServiceManager</h1>
<pre>
<code class="php">
    class Object {

        private $id;

        public function __construct() {
            $this->id = 100;
        }

        public function setId($id) {
            $this->id = $id;
        }

        public function getId() {
            return $this->id;
        }

    }
</code>
<code class="php">
    $sm = new \Zend\ServiceManager\ServiceManager();
    $sm->setInvokableClass('object-shared', 'Application\ServiceManager\Object');
    $sm->setInvokableClass('object-not-shared', 'Application\ServiceManager\Object');
    // Not share service (different instances)
    $sm->setShared('object-not-shared', false);

    // Shared objects
    $object1 = $sm->get('object-shared');
    $object1->setId(452);
    $object2 = $sm->get('object-shared');
    // Not shared objects
    $object3 = $sm->get('object-not-shared');
    $object3->setId(200);
    $object4 = $sm->get('object-not-shared');

    $response = array(
        'object-1-id' => "id : {$object1->getId()}, hash : " . spl_object_hash($object1),
        'object-2-id' => "id : {$object2->getId()}, hash : " . spl_object_hash($object2),
        'object-3-id' => "id : {$object3->getId()}, hash : " . spl_object_hash($object3),
        'object-4-id' => "id : {$object4->getId()}, hash : " . spl_object_hash($object4),
    );

    return $response;
</code>
</pre>
<hr>
<h6>El valor de array es : </h6>
<?php Zend\Debug\Debug::dump($this->array) ?>
<p class="text-warning">Observamos que el método setShared comparte o no la instancia del servicio registrado.</p>
<p class="text-danger">Recordemos que el la opción de shared sirve para invokables y factories</p>
<br>
<a href="/application/service-manager/implementation">Volver atrás</a>